# docker-compose build && docker-compose up -d
# If "docker-compose logs ckan" shows DB not ready, run "docker-compose restart ckan" a few times.
version: "3.6"

# NOT ALLOWED BY BITBUCKET
# volumes:
#     plugin_volume:
#       driver_opts:
#            type: none
#            device: ${BITBUCKET_CLONE_DIR}
#            o: bind

#   ckan_config: 
#   ckan_home: 
#   ckan_storage: 
#   pg_data: 
#   solr_data:

services:

  # sut:
  #   build:
  #     context: ${BITBUCKET_CLONE_DIR}
  #     dockerfile: ${BITBUCKET_CLONE_DIR}/Dockerfile.test
  #     args: 
  #       - PLUGIN=${PLUGIN}
  #   # links:
  #   #   - ckan

  ckan:
    container_name: ckan
    build:
      context: ${BITBUCKET_CLONE_DIR}
      # context: ${BITBUCKET_CLONE_DIR}/contrib/docker
      # dockerfile: ${BITBUCKET_CLONE_DIR}/ckan/Dockerfile
      dockerfile: ${BITBUCKET_CLONE_DIR}/Dockerfile.test
      args:
          - CKAN_SITE_URL=${CKAN_SITE_URL}
          - PLUGIN=${PLUGIN}
    links:
      - db
      - solr
      - redis
    depends_on:
      - db
    ports:
      - "0.0.0.0:${CKAN_PORT}:5000"
    environment:
      # Defaults work with linked containers, change to use own Postgres, SolR, Redis or Datapusher
      - CKAN_SQLALCHEMY_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/ckan
      - CKAN_DATASTORE_WRITE_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/datastore
      - CKAN_DATASTORE_READ_URL=postgresql://datastore_ro:${DATASTORE_READONLY_PASSWORD}@db/datastore
      - CKAN_SOLR_URL=http://solr:8983/solr/ckan
      - CKAN_REDIS_URL=redis://redis:6379/1
      - CKAN_DATAPUSHER_URL=http://datapusher:8800
      - CKAN_SITE_URL=${CKAN_SITE_URL}
      - CKAN_MAX_UPLOAD_SIZE_MB=${CKAN_MAX_UPLOAD_SIZE_MB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}

  datapusher:
    container_name: datapusher
    image: clementmouchet/datapusher
    ports:
      - "8800:8800"

  db:
    container_name: db
    build:
      context: ${BITBUCKET_CLONE_DIR}/contrib/docker
      dockerfile: ./postgresql/Dockerfile
      args:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/db
    # volumes:
    #   - ${BITBUCKET_CLONE_DIR}/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ckan"]

  solr:
    container_name: solr
    build:
      context: ${BITBUCKET_CLONE_DIR}/contrib/docker
      dockerfile: ./solr/Dockerfile
    # volumes:
      #https://community.atlassian.com/t5/Bitbucket-questions/Bitbucket-pipelines-How-can-I-share-a-volume-between-two/qaq-p/1212083
      # - ${BITBUCKET_CLONE_DIR}/solr:/opt/solr/server/solr/ckan/data
    ports:
      - "8983:8983"

  redis:
    container_name: redis
    image: redis:latest

